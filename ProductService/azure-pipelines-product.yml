trigger:
  branches:
    include:
      - master

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  productProject: 'ProductService/ProductService.csproj'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build and Publish ProductService'
    pool:
      vmImage: 'ubuntu-22.04'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(productProject)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish ProductService'  
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/ProductService.csproj'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    # No need to rename ZIP unless strictly needed

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'ProductService'
        publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployWeb
    environment: 'productservice-env'
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'ProductService'
              path: '$(Pipeline.Workspace)/ProductService'

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: 'AzureRM-ERP-Prod'  # Must be a service connection in Azure DevOps
              appType: 'webApp'
              appName: 'erp-productservice'  # Name of your Azure Web App
              package: '$(Pipeline.Workspace)/ProductService/ProductService.zip'

          - task: AzureCLI@2
            displayName: 'Trigger EF Core Migrations'
            inputs:
              azureSubscription: 'AzureRM-ERP-Prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Triggering EF Migrations via HTTP GET"
                curl https://erp-productservice-aeeqg0cdfcczdfb3.centralindia-01.azurewebsites.net/migrate
