trigger:
  branches:
    include:
      - master

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  productProject: 'ProductService/ProductService.csproj'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(productProject)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish ProductService.API'  
      inputs:
        command: 'publish'
        publishWebProjects: false
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/ProductService.API'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/ProductService.API'
        artifactName: 'ProductService.API'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployWeb
    environment: 'productservice-env'
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'drop'
              path: '$(System.ArtifactsDirectory)'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'AzureRM-ERP-Prod'
              appType: 'webApp'
              appName: 'erp-productservice'
              package: '$(Pipeline.Workspace)/drop/ProductService.API.zip' 

          # Optional: Run EF Core migrations via command line
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'AzureRM-ERP-Prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Running EF Core migrations on Azure"
                curl https://productservice.azurewebsites.net/migrate
              displayName: 'Trigger EF Migrations (if endpoint available)'
