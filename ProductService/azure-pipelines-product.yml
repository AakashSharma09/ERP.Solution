trigger:
  branches:
    include:
      - master   # or 'main'

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  serviceName: 'ProductService'
  outputDir: '$(Build.ArtifactStagingDirectory)/$(serviceName)'

stages:
- stage: Build
  displayName: 'Build & Publish ProductService'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '**/*.sln'

    - task: DotNetCoreCLI@2
      displayName: 'Build Project'
      inputs:
        command: 'build'
        projects: '**/$(serviceName).csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run EF Core Migrations'
      inputs:
        command: 'custom'
        custom: 'ef'
        arguments: 'database update --project $(serviceName)/$(serviceName).csproj --startup-project $(serviceName)/$(serviceName).csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Project'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/$(serviceName).csproj'
        arguments: '--configuration $(buildConfiguration) --output $(outputDir)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathToPublish: '$(outputDir)'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  jobs:
  - deployment: DeployWeb
    environment: 'erp-productservice-env'   # Optional: Can set environment in Azure DevOps
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            displayName: 'Deploy ProductService to Azure App Service'
            inputs:
              azureSubscription: 'AzureRM-ERP-Prod'  # Replace with your service connection name
              appType: 'webApp'
              appName: 'erp-productservice'                # App Service name in Azure
              package: '$(Pipeline.Workspace)/drop/$(serviceName).zip'
